#include "glbopts.h"
#include "linalg.h"
#include "minunit.h"
#include "problem_utils.h"
#include "rw.h"
#include "scs.h"
#include "scs_matrix.h"
#include "util.h"

// for SpectralSCS
static const char *several_nuc_cone(void)
{
    ScsCone *k = (ScsCone *)scs_calloc(1, sizeof(ScsCone));
    ScsData *d = (ScsData *)scs_calloc(1, sizeof(ScsData));
    ScsSettings *stgs = (ScsSettings *)scs_calloc(1, sizeof(ScsSettings));
    ScsSolution *sol = (ScsSolution *)scs_calloc(1, sizeof(ScsSolution));
    ScsInfo info = {0};
    scs_int exitflag;
    scs_float perr, derr;
    scs_int success;
    const char *fail;

    /* data */
    scs_float Ax[] = {1., -1., -1., 1., -1., -1., 1., -1., -1., 1., -1., -1., 1.,
                      -1., -1., 1., -1., -1., 1., -1., -1., 1., -1., -1., 1., -1.,
                      -1., 1., -1., -1., 1., -1., -1., 1., -1., -1., 1., -1., -1.,
                      1., -1., -1., 1., -1., -1., 1., -1., -1., 1., -1., -1., 1.,
                      -1., -1., 1., -1., -1., 1., -1., -1., 1., -1., -1., 1., -1.,
                      -1., 1., -1., -1., 1., -1., -1., 1., -1., -1., 1., -1., -1.,
                      1., -1., -1., 1., -1., -1., 1., -1., -1., 1., -1., -1., 1.,
                      -1., -1., 1., -1., -1., 1., -1., -1., 1., -1., -1., 1., -1.,
                      -1., 1., -1., -1., 1., -1., -1., 1., -1., -1., 1., -1., -1.,
                      1., -1., -1., 1., -1., -1., 1., -1., -1., 1., -1., -1., 1.,
                      -1., -1., 1., -1., -1., 1., -1., -1., 1., -1., -1., 1., -1.,
                      -1., 1., -1., -1., 1., -1., -1., 1., -1., -1., 1., -1., -1.,
                      1., -1., -1., 1., -1., -1., 1., -1., -1., 1., -1., -1., 1.,
                      -1., -1., 1., -1., -1., 1., -1., -1., 1., -1., -1., 1., 1.,
                      -1., 1., 1., -1., 1., 1., -1., 1., 1., -1., 1., 1., -1.,
                      1., 1., -1., 1., 1., -1., 1., 1., -1., 1., 1., -1., 1.,
                      1., -1., 1., 1., -1., 1., 1., -1., 1., 1., -1., 1., 1.,
                      -1., 1., 1., -1., 1., 1., -1., 1., 1., -1., 1., 1., -1.,
                      1., 1., -1., 1., 1., -1., 1., 1., -1., 1., 1., -1., 1.,
                      1., -1., 1., 1., -1., 1., 1., -1., 1., 1., -1., 1., 1.,
                      -1., 1., 1., -1., 1., 1., -1., 1., 1., -1., 1., 1., -1.,
                      1., 1., -1., 1., 1., -1., 1., 1., -1., 1., 1., -1., 1.,
                      1., -1., 1., 1., -1., 1., 1., -1., 1., 1., -1., 1., 1.,
                      -1., 1., 1., -1., 1., 1., -1., 1., 1., -1., 1., 1., -1.,
                      1., 1., -1., 1., 1., -1., 1., 1., -1., 1., 1., -1., 1.,
                      1., -1., 1., 1., -1., 1., 1., -1., 1., 1., -1., 1., 1.,
                      -1., 1., 1., -1., 1., 1., -1., 1., 1., -1., 1., 1., -1.,
                      1., 1., -1., 1., 1., -1., 1., 1., -1., -1., -1., 1., -1.,
                      1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1.,
                      -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1.,
                      1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1.,
                      -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1.,
                      1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1.,
                      -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1.,
                      1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1.,
                      -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1.,
                      1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1.,
                      -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1.,
                      1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1.,
                      -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1.,
                      1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1.,
                      -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1.,
                      1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1.,
                      -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1.,
                      1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1.,
                      -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1., 1., -1.,
                      1., -1., 1., -1.};
    scs_int Ai[] = {60, 61, 121, 60, 62, 122, 60, 63, 123, 60, 64, 124, 60,
                    65, 125, 60, 66, 126, 60, 67, 127, 60, 68, 128, 60, 69,
                    129, 60, 70, 130, 60, 71, 131, 60, 72, 132, 60, 73, 133,
                    60, 74, 134, 60, 75, 135, 60, 76, 136, 60, 77, 137, 60,
                    78, 138, 60, 79, 139, 60, 80, 140, 60, 81, 141, 60, 82,
                    142, 60, 83, 143, 60, 84, 144, 60, 85, 145, 60, 86, 146,
                    60, 87, 147, 60, 88, 148, 60, 89, 149, 60, 90, 150, 60,
                    91, 151, 60, 92, 152, 60, 93, 153, 60, 94, 154, 60, 95,
                    155, 60, 96, 156, 60, 97, 157, 60, 98, 158, 60, 99, 159,
                    60, 100, 160, 60, 101, 161, 60, 102, 162, 60, 103, 163, 60,
                    104, 164, 60, 105, 165, 60, 106, 166, 60, 107, 167, 60, 108,
                    168, 60, 109, 169, 60, 110, 170, 60, 111, 171, 60, 112, 172,
                    60, 113, 173, 60, 114, 174, 60, 115, 175, 60, 116, 176, 60,
                    117, 177, 60, 118, 178, 60, 119, 179, 60, 120, 180, 0, 61,
                    121, 1, 62, 122, 2, 63, 123, 3, 64, 124, 4, 65, 125,
                    5, 66, 126, 6, 67, 127, 7, 68, 128, 8, 69, 129, 9,
                    70, 130, 10, 71, 131, 11, 72, 132, 12, 73, 133, 13, 74,
                    134, 14, 75, 135, 15, 76, 136, 16, 77, 137, 17, 78, 138,
                    18, 79, 139, 19, 80, 140, 20, 81, 141, 21, 82, 142, 22,
                    83, 143, 23, 84, 144, 24, 85, 145, 25, 86, 146, 26, 87,
                    147, 27, 88, 148, 28, 89, 149, 29, 90, 150, 30, 91, 151,
                    31, 92, 152, 32, 93, 153, 33, 94, 154, 34, 95, 155, 35,
                    96, 156, 36, 97, 157, 37, 98, 158, 38, 99, 159, 39, 100,
                    160, 40, 101, 161, 41, 102, 162, 42, 103, 163, 43, 104, 164,
                    44, 105, 165, 45, 106, 166, 46, 107, 167, 47, 108, 168, 48,
                    109, 169, 49, 110, 170, 50, 111, 171, 51, 112, 172, 52, 113,
                    173, 53, 114, 174, 54, 115, 175, 55, 116, 176, 56, 117, 177,
                    57, 118, 178, 58, 119, 179, 59, 120, 180, 181, 242, 0, 182,
                    1, 183, 2, 184, 3, 185, 4, 186, 5, 187, 6, 188, 7,
                    189, 8, 190, 9, 191, 10, 192, 11, 193, 12, 194, 13, 195,
                    14, 196, 15, 197, 16, 198, 17, 199, 18, 200, 19, 201, 20,
                    202, 21, 203, 22, 204, 23, 205, 24, 206, 25, 207, 26, 208,
                    27, 209, 28, 210, 29, 211, 30, 212, 31, 213, 32, 214, 33,
                    215, 34, 216, 35, 217, 36, 218, 37, 219, 38, 220, 39, 221,
                    40, 222, 41, 223, 42, 224, 43, 225, 44, 226, 45, 227, 46,
                    228, 47, 229, 48, 230, 49, 231, 50, 232, 51, 233, 52, 234,
                    53, 235, 54, 236, 55, 237, 56, 238, 57, 239, 58, 240, 59,
                    241, 0, 243, 1, 244, 2, 245, 3, 246, 4, 247, 5, 248,
                    6, 249, 7, 250, 8, 251, 9, 252, 10, 253, 11, 254, 12,
                    255, 13, 256, 14, 257, 15, 258, 16, 259, 17, 260, 18, 261,
                    19, 262, 20, 263, 21, 264, 22, 265, 23, 266, 24, 267, 25,
                    268, 26, 269, 27, 270, 28, 271, 29, 272, 30, 273, 31, 274,
                    32, 275, 33, 276, 34, 277, 35, 278, 36, 279, 37, 280, 38,
                    281, 39, 282, 40, 283, 41, 284, 42, 285, 43, 286, 44, 287,
                    45, 288, 46, 289, 47, 290, 48, 291, 49, 292, 50, 293, 51,
                    294, 52, 295, 53, 296, 54, 297, 55, 298, 56, 299, 57, 300,
                    58, 301, 59, 302};
    scs_int Ap[] = {0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36,
                    39, 42, 45, 48, 51, 54, 57, 60, 63, 66, 69, 72, 75,
                    78, 81, 84, 87, 90, 93, 96, 99, 102, 105, 108, 111, 114,
                    117, 120, 123, 126, 129, 132, 135, 138, 141, 144, 147, 150, 153,
                    156, 159, 162, 165, 168, 171, 174, 177, 180, 183, 186, 189, 192,
                    195, 198, 201, 204, 207, 210, 213, 216, 219, 222, 225, 228, 231,
                    234, 237, 240, 243, 246, 249, 252, 255, 258, 261, 264, 267, 270,
                    273, 276, 279, 282, 285, 288, 291, 294, 297, 300, 303, 306, 309,
                    312, 315, 318, 321, 324, 327, 330, 333, 336, 339, 342, 345, 348,
                    351, 354, 357, 360, 361, 362, 364, 366, 368, 370, 372, 374, 376,
                    378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402,
                    404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428,
                    430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454,
                    456, 458, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 480,
                    482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506,
                    508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532,
                    534, 536, 538, 540, 542, 544, 546, 548, 550, 552, 554, 556, 558,
                    560, 562, 564, 566, 568, 570, 572, 574, 576, 578, 580, 582, 584,
                    586, 588, 590, 592, 594, 596, 598, 600, 602};

    scs_float b[] = {1.00346258, 1.058972, 1.3338978, 0.95502671, 0.76639009,
                     0.61628772, 1.42111113, 1.03841293, 0.44615864, 0.85861969,
                     0.90243625, 0.72213324, 0.94699689, 0.81716838, 1.01510945,
                     0.13007678, 1.198153, 0.95044553, 0.4949946, 1.07831368,
                     1.32720261, 1.07903274, 1.68375286, 1.27474549, 1.18000824,
                     0.61398833, 1.82853889, 1.27952122, 0.75345835, 1.20492083,
                     1.2038308, 1.03174759, 1.68585985, 1.11247234, 1.00162586,
                     0.62169897, 1.69182118, 1.29236728, 0.59968048, 1.17087666,
                     0.39423923, 0.29843035, 0.53155946, 0.40310646, 0.3583775,
                     0.18407451, 0.53328188, 0.34513123, 0.26243805, 0.37141265,
                     0.72923936, 0.60496262, 0.78424416, 0.6510247, 0.76451821,
                     0.16999683, 0.98700998, 0.79590066, 0.37119843, 0.86498628,
                     0.58937813, 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0., 0., 0.,
                     0., 0., 0.};
    scs_float c[] = { 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                      0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                      0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                      0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                      0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                      0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                      0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                      0., 1., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                      0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                      0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                      0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                      0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                      0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                      0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
                      0., 0., 0., 0.};
    scs_int m = 303;
    scs_int n = 242;

    scs_int z = 60;
    scs_int l = 121;
    scs_int *q = SCS_NULL;
    scs_int qsize = 0;
    scs_int *s = SCS_NULL;
    scs_int ssize = 0;
    scs_int ep = 0;
    scs_int ed = 0;
    scs_float *p = SCS_NULL;
    scs_int psize = 0;
    scs_int *d_array = SCS_NULL;
    scs_int dsize = 0;
    scs_int nuc_m[] = {10, 10};
    scs_int nuc_n[] = {6, 6};
    scs_int nucsize = 2;
    scs_int *ell1 = SCS_NULL;
    scs_int ell1_size = 0;
    scs_int *sl_n = SCS_NULL;
    scs_int *sl_k = SCS_NULL;
    scs_int sl_size = 0;

    // computed using mosek (the input of Ax is truncated, and mosek solved
    // the problem with the non-truncated data)
    scs_float opt = 8.046737935264606;
    /* end data */

    d->m = m;
    d->n = n;
    d->b = b;
    d->c = c;

    d->A = (ScsMatrix *)scs_calloc(1, sizeof(ScsMatrix));

    d->A->m = m;
    d->A->n = n;
    d->A->x = Ax;
    d->A->i = Ai;
    d->A->p = Ap;

    k->z = z;
    k->l = l;
    k->q = q;
    k->qsize = qsize;
    k->s = s;
    k->ssize = ssize;
    k->ep = ep;
    k->ed = ed;
    k->p = p;
    k->psize = psize;
    k->d = d_array;
    k->dsize = dsize;
    k->nuc_m = nuc_m;
    k->nuc_n = nuc_n;
    k->nucsize = nucsize;
    k->ell1 = ell1;
    k->ell1_size = ell1_size;
    k->sl_n = sl_n;
    k->sl_k = sl_k;
    k->sl_size = sl_size;

    scs_set_default_settings(stgs);
    stgs->eps_abs = 1e-6;
    stgs->eps_rel = 1e-6;
    stgs->eps_infeas = 1e-9;

    exitflag = scs(d, k, stgs, sol, &info);

    perr = SCS(dot)(d->c, sol->x, d->n) - opt;
    derr = -SCS(dot)(d->b, sol->y, d->m) - opt;

    scs_printf("primal obj error %4e\n", perr);
    scs_printf("dual obj error %4e\n", derr);

    success = ABS(perr) < 1e-4 && ABS(derr) < 1e-4 && exitflag == SCS_SOLVED;

    mu_assert("robust_pca: SCS failed to produce outputflag SCS_SOLVED",
              success);

    fail = verify_solution_correct(d, k, stgs, &info, sol, exitflag);
    if (fail)
        return fail;

    /* kill data */
    scs_free(d->A);
    scs_free(k);
    scs_free(stgs);
    scs_free(d);
    SCS(free_sol)
    (sol);

    return fail;
}
