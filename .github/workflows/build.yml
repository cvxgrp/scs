name: Build and Test

on: [push, pull_request]

jobs:
  linux:
    strategy:
      fail-fast: false
      matrix:
        long: [0, 1]
        lapack: [0, 1]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - run: sudo apt-get update && sudo apt-get install -y libopenblas-dev liblapack-dev
      - run: make DLONG=${{ matrix.long }} USE_LAPACK=${{ matrix.lapack }}
      - run: make test DLONG=${{ matrix.long }} USE_LAPACK=${{ matrix.lapack }}
      - run: out/run_tests_direct
      - run: out/run_tests_indirect

  windows:
    strategy:
      fail-fast: false
      matrix:
        long: [0, 1]
        lapack: [0, 1]
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v5

      - name: Set up MSYS2 (UCRT64) + toolchain + BLAS/LAPACK
        uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: UCRT64
          install: >
            base-devel
            git
            mingw-w64-ucrt-x86_64-toolchain
            mingw-w64-ucrt-x86_64-pkgconf
            mingw-w64-ucrt-x86_64-openblas
            mingw-w64-ucrt-x86_64-lapack

      - name: Toolchain sanity check
        run: |
          echo "MSYSTEM=$MSYSTEM"
          echo "PATH=$PATH"
          which gcc
          gcc --version
          which pkg-config
          pkg-config --libs --cflags openblas || true

      - name: Build
        run: make DLONG=${{ matrix.long }} USE_LAPACK=${{ matrix.lapack }}

      - name: Build tests
        run: make test DLONG=${{ matrix.long }} USE_LAPACK=${{ matrix.lapack }}

      - name: Run direct tests
        run: out/run_tests_direct

      - name: Run indirect tests
        run: out/run_tests_indirect

  mac:
    strategy:
      fail-fast: false
      matrix:
        long: [0, 1]
        lapack: [0, 1]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v5
      - run: brew update && brew install openblas lapack
      - run: make DLONG=${{ matrix.long }} USE_LAPACK=${{ matrix.lapack }}
      - run: make test DLONG=${{ matrix.long }} USE_LAPACK=${{ matrix.lapack }}
      - run: out/run_tests_direct
      - run: out/run_tests_indirect

